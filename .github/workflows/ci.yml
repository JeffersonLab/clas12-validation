name: Validation

on:
  workflow_dispatch:
    inputs:
      source:
        required: true
        type: string
      title:
        required: true
        type: string
      source_url:
        required: false
        type: string
      git_coatjava:
        required: false
        type: string
      git_clas12Tags:
        required: false
        type: string
  pull_request:
  push:
    branches: [ master ]

run-name: "[${{ inputs.source || github.repository }}] ${{ inputs.title || github.event.pull_request.title || github.event.push.head_commit.message }}"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

env:
  # default dependency forks and branches
  git_coatjava: '{
    "fork": "JeffersonLab/coatjava",
    "branch": "development"
  }'
  git_clas12Tags: '{
    "fork": "gemc/clas12Tags",
    "branch": "main"
  }'

jobs:

  # dependency and triggerer info
  #############################################################################
  dependency_info:
    runs-on: ubuntu-latest
    steps:
      - name: get dependency info
        run: |
          echo FORK_COATJAVA=$(     echo '${{ inputs.git_coatjava || env.git_coatjava }}'     | jq -r '.fork'   ) >> $GITHUB_ENV
          echo BRANCH_COATJAVA=$(   echo '${{ inputs.git_coatjava || env.git_coatjava }}'     | jq -r '.branch' ) >> $GITHUB_ENV
          echo FORK_CLAS12TAGS=$(   echo '${{ inputs.git_clas12Tags || env.git_clas12Tags }}' | jq -r '.fork'   ) >> $GITHUB_ENV
          echo BRANCH_CLAS12TAGS=$( echo '${{ inputs.git_clas12Tags || env.git_clas12Tags }}' | jq -r '.branch' ) >> $GITHUB_ENV
      - name: dispatch summary
        run: |
          echo '| | | |' >> $GITHUB_STEP_SUMMARY
          echo '| --- | --- | --- |' >> $GITHUB_STEP_SUMMARY
          echo '| **Pull Request** | <${{ inputs.source_url || github.event.pull_request.html_url }}> | ${{ inputs.title || github.event.pull_request.title }} |' >> $GITHUB_STEP_SUMMARY
          echo '| **`coatjava` Fork and Branch** | `${{ env.FORK_COATJAVA }}` | [`${{ env.BRANCH_COATJAVA }}`](https://github.com/${{ env.FORK_COATJAVA }}/tree/${{ env.BRANCH_COATJAVA }}) |' >> $GITHUB_STEP_SUMMARY
          echo '| **`clas12Tags` Fork and Branch** | `${{ env.FORK_CLAS12TAGS }}` | [`${{ env.BRANCH_CLAS12TAGS }}`](https://github.com/${{ env.FORK_CLAS12TAGS }}/tree/${{ env.BRANCH_CLAS12TAGS }}) |' >> $GITHUB_STEP_SUMMARY
          echo '| | | |' >> $GITHUB_STEP_SUMMARY
      - name: clone coatjava
        run: |
          git clone https://github.com/${{ env.FORK_COATJAVA }}.git --branch ${{ env.BRANCH_COATJAVA }}
          tar czvf coatjava{.tar.gz,}
      - name: clone clas12Tags
        run: |
          git clone https://github.com/${{ env.FORK_CLAS12TAGS }}.git --branch ${{ env.BRANCH_CLAS12TAGS }}
          tar czvf clas12Tags{.tar.gz,}
    - uses: actions/upload-artifact@v3
      with:
        name: clones
        retention-days: 1
        path: ./*.tar.gz

  # build
  #############################################################################

  build_coatjava:
    needs:
      - dependency_info
    runs-on: ubuntu-latest
    steps:
    - name: setup java
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: zulu
    - uses: actions/download-artifact@v3
      with:
        name: clones
    - name: untar build
      run: tar xzvf coatjava.tar.gz
    - name: build
      run: |
        cd coatjava
        ./build-coatjava.sh
    - name: tree
      run: tree
    - name: tar
      run: tar czvf coatjava{.tar.gz,}
    - uses: actions/upload-artifact@v3
      with:
        name: build
        retention-days: 1
        path: ./*.tar.gz

  build_gemc:
    needs:
      - dependency_info
    runs-on: ubuntu-latest
    container: jeffersonlab/gemc:4.4.2-5.1-5.2-5.3-fedora36-cvmfs ##### FIXME: need `latest` tag
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: clones
    - name: untar build
      run: tar xzvf clas12Tags.tar.gz
    - name: build
      run: |
        source /app/localSetup.sh
        cd clas12Tags/source
        scons -j2 OPT=1
    - name: tar
      run: tar czvf clas12Tags{.tar.gz,}
    - uses: actions/upload-artifact@v3
      with:
        name: build
        retention-days: 1
        path: ./*.tar.gz

  # event generation
  #############################################################################
  event_generation:
    needs:
      - build_coatjava
    runs-on: ubuntu-latest
    steps:
    - name: setup java
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: zulu
    - name: setup groovy
      uses: wtfjoke/setup-groovy@v1
      with:
        groovy-version: 4.x
    - uses: actions/download-artifact@v3
      with:
        name: build
    - name: untar build
      run: tar xzvf *.tar.gz
    - name: event generation
      run: |
        coatjava/validation/advanced-tests/src/eb/scripts/gen.sh
    - uses: actions/upload-artifact@v3
      with:
        name: event_generation
        retention-days: 1
        path: ./*.txt

  # simulation
  #############################################################################
  simulation:
    needs:
      - event_generation
      - build_gemc
    runs-on: ubuntu-latest
    container: jeffersonlab/gemc:4.4.2-5.1-5.2-5.3-fedora36-cvmfs ##### FIXME: need `latest` tag
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: event_generation
    - uses: actions/download-artifact@v3
      with:
        name: build
    - name: tree
      run: ls -lR
    - name: untar build
      run: tar xzvf *.tar.gz
    - name: simulation
      run: |
        source /app/localSetup.sh
        cd clas12Tags/source
        ./gemc # TODO
