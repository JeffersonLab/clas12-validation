name: Validation

on:
  workflow_dispatch:
    inputs:
      source:
        required: true
        type: string
      title:
        required: true
        type: string
      source_url:
        required: false
        type: string
      git_coatjava:
        required: false
        type: string
      git_clas12tags:
        required: false
        type: string
      git_clas12config:
        required: false
        type: string
  pull_request:
  push:
    branches: [ main ]
    tags: [ '*' ]

run-name: "[${{ inputs.source || github.repository }}] ${{ inputs.title || github.event.pull_request.title || github.event.head_commit.message }}"

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

env:
  # default dependency forks and branches
  git_coatjava: >-
    {
      "fork": "JeffersonLab/coatjava",
      "branch": "development"
    }
  git_clas12tags: >-
    {
      "fork": "gemc/clas12Tags",
      "branch": "main"
    }
  git_clas12config: >-
    {
      "fork": "c-dilks/clas12-config",
      "branch": "match-latest",
      "tag_config_coatjava": "latest",
      "tag_config_gemc": "latest"
    }
  # default number of events
  num_events: 10

jobs:

  # dependency and triggerer info
  #############################################################################
  dependency_info:
    name: Dependency info
    runs-on: ubuntu-latest
    outputs:
      fork_coatjava: ${{ steps.info.outputs.fork_coatjava }}
      branch_coatjava: ${{ steps.info.outputs.branch_coatjava }}
      fork_clas12tags: ${{ steps.info.outputs.fork_clas12tags }}
      branch_clas12tags: ${{ steps.info.outputs.branch_clas12tags }}
      fork_clas12config: ${{ steps.info.outputs.fork_clas12config }}
      branch_clas12config: ${{ steps.info.outputs.branch_clas12config }}
      tag_config_coatjava: ${{ steps.info.outputs.tag_config_coatjava }}
      tag_config_gemc: ${{ steps.info.outputs.tag_config_gemc }}
    steps:
      - name: get dependency info
        id: info
        run: |
          echo fork_coatjava=$(       echo '${{ inputs.git_coatjava || env.git_coatjava }}'         | jq -r '.fork'                ) >> $GITHUB_OUTPUT
          echo branch_coatjava=$(     echo '${{ inputs.git_coatjava || env.git_coatjava }}'         | jq -r '.branch'              ) >> $GITHUB_OUTPUT
          echo fork_clas12tags=$(     echo '${{ inputs.git_clas12tags || env.git_clas12tags }}'     | jq -r '.fork'                ) >> $GITHUB_OUTPUT
          echo branch_clas12tags=$(   echo '${{ inputs.git_clas12tags || env.git_clas12tags }}'     | jq -r '.branch'              ) >> $GITHUB_OUTPUT
          echo fork_clas12config=$(   echo '${{ inputs.git_clas12config || env.git_clas12config }}' | jq -r '.fork'                ) >> $GITHUB_OUTPUT
          echo branch_clas12config=$( echo '${{ inputs.git_clas12config || env.git_clas12config }}' | jq -r '.branch'              ) >> $GITHUB_OUTPUT
          echo tag_config_coatjava=$( echo '${{ inputs.git_clas12config || env.git_clas12config }}' | jq -r '.tag_config_coatjava' ) >> $GITHUB_OUTPUT
          echo tag_config_gemc=$(     echo '${{ inputs.git_clas12config || env.git_clas12config }}' | jq -r '.tag_config_gemc'     ) >> $GITHUB_OUTPUT
      - name: dispatch summary
        run: |
          echo '| | | |' >> $GITHUB_STEP_SUMMARY
          echo '| --- | --- | --- |' >> $GITHUB_STEP_SUMMARY
          echo '| **Pull Request** | <${{ inputs.source_url || github.event.pull_request.html_url }}> | ${{ inputs.title || github.event.pull_request.title }} |' >> $GITHUB_STEP_SUMMARY
          echo '| **`coatjava` Fork and Branch** | `${{ steps.info.outputs.fork_coatjava }}` | [`${{ steps.info.outputs.branch_coatjava }}`](https://github.com/${{ steps.info.outputs.fork_coatjava }}/tree/${{ steps.info.outputs.branch_coatjava }}) |' >> $GITHUB_STEP_SUMMARY
          echo '| **`clas12Tags` Fork and Branch** | `${{ steps.info.outputs.fork_clas12tags }}` | [`${{ steps.info.outputs.branch_clas12tags }}`](https://github.com/${{ steps.info.outputs.fork_clas12tags }}/tree/${{ steps.info.outputs.branch_clas12tags }}) |' >> $GITHUB_STEP_SUMMARY
          echo '| **`clas12-config` Fork and Branch** | `${{ steps.info.outputs.fork_clas12config }}` | [`${{ steps.info.outputs.branch_clas12config }}`](https://github.com/${{ steps.info.outputs.fork_clas12config }}/tree/${{ steps.info.outputs.branch_clas12config }}) |' >> $GITHUB_STEP_SUMMARY
          echo '| | | |' >> $GITHUB_STEP_SUMMARY

  # build
  #############################################################################

  build_coatjava:
    needs:
      - dependency_info
    runs-on: ubuntu-latest
    steps:
    - name: setup java
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: zulu
    - name: clone
      run: git clone https://github.com/${{ needs.dependency_info.outputs.fork_coatjava }}.git --branch ${{ needs.dependency_info.outputs.branch_coatjava }}
    - name: build
      run: |
        cd coatjava
        ./build-coatjava.sh
    - name: tree
      run: tree
    - name: tar
      run: tar czvf coatjava{.tar.gz,}
    - uses: actions/upload-artifact@v3
      with:
        name: build
        retention-days: 1
        path: ./*.tar.gz

  build_gemc:
    needs:
      - dependency_info
    runs-on: ubuntu-latest
    container: jeffersonlab/gemc:4.4.2-5.1-5.2-5.3-fedora36-cvmfs ##### FIXME: need `latest` tag
    steps:
    - name: clone
      run: git clone https://github.com/${{ needs.dependency_info.outputs.fork_clas12tags }}.git --branch ${{ needs.dependency_info.outputs.branch_clas12tags }}
    - name: build
      run: |
        source /app/localSetup.sh
        cd clas12Tags/source
        scons -j2 OPT=1
        module switch gemc/5.3 # for dependency files ##### FIXME: switch to gemc/dev and use ubuntu + cvmfs action
        echo "### GEMC Build Information:" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        ./gemc -USE_GUI=0 >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
    - name: tar
      run: tar czvf clas12Tags{.tar.gz,}
    - uses: actions/upload-artifact@v3
      with:
        name: build
        retention-days: 1
        path: ./*.tar.gz

  # clas12-config configuration
  #############################################################################

  config_files:
    name: Configuration files
    needs:
      - dependency_info
    runs-on: ubuntu-latest
    outputs:
      tag_config_coatjava: ${{ steps.version.outputs.tag_config_coatjava }}
      tag_config_gemc: ${{ steps.version.outputs.tag_config_gemc }}
      evgen_files_json: ${{ steps.evgen_files_json.outputs.evgen_files_json }}
      config_files_json: ${{ steps.config_files_json.outputs.config_files_json }}
      config_matrix: ${{ steps.config_matrix.outputs.config_matrix }}
    steps:
    - uses: actions/checkout@v3
    - name: clone
      run: git clone https://github.com/${{ needs.dependency_info.outputs.fork_clas12config }}.git --branch ${{ needs.dependency_info.outputs.branch_clas12config }}
    - name: get version info
      id: version
      run: |
        cd clas12-config
        tag_config_coatjava=${{ needs.dependency_info.outputs.tag_config_coatjava }}
        tag_config_gemc=${{ needs.dependency_info.outputs.tag_config_gemc }}
        # get the 'latest' version number, if we asked for 'latest'
        [ "${{ needs.dependency_info.outputs.tag_config_coatjava }}" = "latest" ] &&  tag_config_coatjava=$(util/latest.rb coatjava)
        [ "${{ needs.dependency_info.outputs.tag_config_gemc }}" = "latest" ]     && tag_config_gemc=$(util/latest.rb gemc)
        # job summary
        echo "### Versions:" >> $GITHUB_STEP_SUMMARY
        echo "| Configuration File Set | Version |"      >> $GITHUB_STEP_SUMMARY
        echo "| --- | --- |"                             >> $GITHUB_STEP_SUMMARY
        echo "| \`coatjava\` | ${tag_config_coatjava} |" >> $GITHUB_STEP_SUMMARY
        echo "| \`gemc\` | ${tag_config_gemc} |"         >> $GITHUB_STEP_SUMMARY
        # output vars
        echo tag_config_coatjava=$tag_config_coatjava >> $GITHUB_OUTPUT
        echo tag_config_gemc=$tag_config_gemc         >> $GITHUB_OUTPUT
    - name: read evgen files matrix
      id: evgen_files_json
      run: echo evgen_files_json=$(jq -c . config/evgen_ci.json) >> $GITHUB_OUTPUT
    - name: get common config files
      id: config_files_json
      run: |
        cd clas12-config
        echo config_files_json=$(util/match_configs.rb) >> $GITHUB_OUTPUT
    - name: build full job matrix
      id: config_matrix
      run: echo config_matrix=$(jq -sc add <(echo '${{ steps.config_files_json.outputs.config_files_json }}') <(echo '${{ steps.evgen_files_json.outputs.evgen_files_json }}')) >> $GITHUB_OUTPUT
    - name: summarize
      run: |
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Configuration Job Matrix:" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo ${{ steps.config_matrix.outputs.config_matrix }} | jq | xargs -0 -I{} echo {} >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        ## TEST
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo '${{ steps.evgen_files_json.outputs.evgen_files_json }}' | jq | xargs -0 -I{} echo {} >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo '${{ steps.config_files_json.outputs.config_files_json }}' | jq | xargs -0 -I{} echo {} >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
    - name: tar
      run: tar czvf clas12-config{.tar.gz,}
    - uses: actions/upload-artifact@v3
      with:
        name: build
        retention-days: 1
        path: ./*.tar.gz

  # event generation
  #############################################################################
  event_generation:
    needs:
      - build_coatjava
      - config_files
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix: ${{ fromJson(needs.config_files.outputs.evgen_files_json) }}
    steps:
    - name: setup java
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: zulu
    - name: setup groovy
      uses: wtfjoke/setup-groovy@v1
      with:
        groovy-version: 4.x
    - uses: actions/download-artifact@v3
      with:
        name: build
    - name: untar build
      run: ls *.tar.gz | xargs -I{} tar xzvf {}
    - name: check if this configuration is known
      run: jq -re '.${{ matrix.evgen }}' config/evgen_opts.json
    - name: event generation
      run: |
        coatjava/coatjava/bin/run-groovy
          coatjava/validation/advanced-tests/src/eb/scripts/gen.groovy \
          $(jq -r '.${{ matrix.evgen }}' config/evgen_opts.json) \
          -n ${{ env.num_events }}
    - name: rename artifact
      run: |
        ls -t *.txt
        mv -v $(ls -t *.txt | head -n1) ${{ matrix.evgen }}.txt
    - uses: actions/upload-artifact@v3
      with:
        name: evgen
        retention-days: 1
        path: ${{ matrix.evgen }}.txt

  # simulation
  #############################################################################
  simulation:
    needs:
      - event_generation
      - build_gemc
      - config_files
    runs-on: ubuntu-latest
    container: jeffersonlab/gemc:4.4.2-5.1-5.2-5.3-fedora36-cvmfs ##### FIXME: need `latest` tag
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.config_files.outputs.config_matrix) }}
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: evgen
    - uses: actions/download-artifact@v3
      with:
        name: build
    - name: tree
      run: ls -lhR
    - name: untar build
      run: ls *.tar.gz | xargs -I{} tar xzvf {}
    - name: simulation
      run: |
        evgenFile=$(pwd)/${{ matrix.evgen }}.txt
        gemcConfigFile=$(pwd)/clas12-config/gemc/${{ needs.config_files.outputs.tag_config_gemc }}/${{ matrix.config }}.gcard
        source /app/localSetup.sh
        module switch gemc/5.3 # for dependency files ##### FIXME: switch to gemc/dev and use ubuntu + cvmfs action
        cd clas12Tags/source
        ./gemc \
          $gemcConfigFile \
          -INPUT_GEN_FILE="LUND, $evgenFile" \
          -USE_GUI=0 \
          -OUTPUT="hipo, sim.${{ matrix.evgen }}.${{ matrix.config }}.hipo"
        done
    - name: ls
      run: ls -lth clas12Tags/source
    - uses: actions/upload-artifact@v3
      with:
        name: sim
        retention-days: 3
        path: clas12Tags/source/sim*.hipo
